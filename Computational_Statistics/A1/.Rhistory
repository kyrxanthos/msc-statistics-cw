c=1
for (n in rep(N,it)){
x <- rcauchy(n)
y <- rcauchy(n)
w <- mapply(f, x, y)/(dcauchy(x)*dcauchy(y))
cat(mean((x-y)^2*w), sd((x-y)^2*w)/sqrt(n), max(w),'\n')
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
df <- data.frame(Estimate = est, SE = se, Max_Weight = mw)
library(xtable)
print(xtable(df),include.rownames=FALSE) #Remove rownames
set.seed(222)
N <- 10^4
it <- 15
est <- rep(0,it)
mw <- rep(0, it)
se <- rep(0,it)
c=1
for (n in rep(N,it)){
x <- rcauchy(n)
y <- rcauchy(n)
w <- mapply(f, x, y)/(dcauchy(x)*dcauchy(y))
cat(mean((x-y)^2*w), sd((x-y)^2*w)/sqrt(n), max(w),'\n')
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
df <- data.frame(Estimate = est, SE = se, Max_Weight = mw)
library(xtable)
print(xtable(df),include.rownames=FALSE) #Remove rownames
rm(list = ls())
set.seed(222)
X <- rnorm(1e4)
mc <- mean(X*(X>=1))
mc
n <- 1e4
X <- rnorm(n)
mc <- mean(X*(X>=1))
mc
Y <- 1+ rexp(n)
mean(Y*(Y>=1) *dnorm(Y)/dexp(Y-1))
IC_sd <- sd(Y*(Y>=1) *dnorm(Y)/dexp(Y-1))
IC_sd
mc_sd <- sd(X*(X>=1))
mc_sd
rm(list = ls())
set.seed(222)
n <- 1e4
X <- rnorm(n)
mc <- mean(X*(X>=1))
mc_sd <- sd(X*(X>=1))
mc
mc_sd
#b)
Y <- 1+ rexp(n)
IC <- mean(Y*(Y>=1) *dnorm(Y)/dexp(Y-1))
IC_sd <- sd(Y*(Y>=1) *dnorm(Y)/dexp(Y-1))
IC
IC_sd
?pnorm
pnorm(1)
1- pnorm(1)
E_t <- mean(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
a <- -cov(X*(X>=1), (X>=1))
a
a <- -cov(X*(X>=1), (X>=1)) / var(X>=1)
a
E_t <- mean(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
E_t
rm(list = ls())
set.seed(222)
n <- 1e4
X <- rnorm(n)
mc <- mean(X*(X>=1))
mc_sd <- sd(X*(X>=1))
mc
mc_sd
#b)
Y <- 1+ rexp(n)
IC <- mean(Y*(Y>=1) *dnorm(Y)/dexp(Y-1))
IC_sd <- sd(Y*(Y>=1) *dnorm(Y)/dexp(Y-1))
IC
IC_sd
a <- -cov(X*(X>=1), (X>=1)) / var(X>=1)
E_t <- mean(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
Et_sd <- sd(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
E_t <- mean(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
Et
a <- -cov(X*(X>=1), (X>=1)) / var(X>=1)
E_t <- mean(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
Et
E_t
Et_sd <- sd(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
Et_sd
Et_sd <- sd(X*(X>=1) -a*((X>=1)- (1-pnorm(1)))) / sqrt(n)
Et_sd
rm(list = ls())
set.seed(222)
n <- 1e4
X <- rnorm(n)
mc <- mean(X*(X>=1))
mc_sd <- sd(X*(X>=1))
mc
mc_sd
#b)
Y <- 1+ rexp(n)
IC <- mean(Y*(Y>=1) *dnorm(Y)/dexp(Y-1))
IC_sd <- sd(Y*(Y>=1) *dnorm(Y)/dexp(Y-1))
IC
IC_sd
a <- -cov(X*(X>=1), (X>=1)) / var(X>=1)
E_t <- mean(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
Et_sd <- sd(X*(X>=1) -a*((X>=1)- (1-pnorm(1)))) / sqrt(n)
E_t
Et_sd
rm(list = ls())
set.seed(222)
n <- 1e4
X <- rnorm(n)
mc <- mean(X*(X>=1))
mc_sd <- sd(X*(X>=1)) / sqrt(n)
mc
mc_sd
#b)
Y <- 1+ rexp(n)
IC <- mean(Y*(Y>=1) *dnorm(Y)/dexp(Y-1))
IC_sd <- sd(Y*(Y>=1) *dnorm(Y)/dexp(Y-1)) / sqrt(n)
IC
IC_sd
a <- -cov(X*(X>=1), (X>=1)) / var(X>=1)
E_t <- mean(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
Et_sd <- sd(X*(X>=1) -a*((X>=1)- (1-pnorm(1)))) / sqrt(n)
E_t
Et_sd
a <- -cov(X*(X>=1), (X>=1)) / var(X>=1)
E_t <- mean(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
Et_sd <- sd(X*(X>=1) -a*((X>=1)- (1-pnorm(1)))) / sqrt(n)
E_t
Et_sd
set.seed(222)
n <- 1e4
X <- rnorm(n)
mc <- mean(X*(X>=1))
mc_sd <- sd(X*(X>=1)) / sqrt(n)
mc
mc_sd
Y <- 1+ rexp(n)
IC <- mean(Y*(Y>=1) *dnorm(Y)/dexp(Y-1))
IC_sd <- sd(Y*(Y>=1) *dnorm(Y)/dexp(Y-1)) / sqrt(n)
IC
IC_sd
a <- -cov(X*(X>=1), (X>=1)) / var(X>=1)
E_t <- mean(X*(X>=1) -a*((X>=1)- (1-pnorm(1))))
Et_sd <- sd(X*(X>=1) -a*((X>=1)- (1-pnorm(1)))) / sqrt(n)
E_t
Et_sd
?integrate
rm(list = ls())
set.seed(222)
sigma <- 1
sigmas <- c(0.01,0.1,0.5,1)
I_sigma <- function(x, sigma=0.01){
1/2*x*(1/(pi*(1+x^2)) + 1/(sigma*sqrt(2*pi)) * exp(-(x-5)^2/(2*sigma^2)))
}
x <- seq(-2,8,0.01)
# pdf('Isigma.pdf', width=9, heigh=5)
plot(x, I_sigma(x,0.1), type='l', ylab='I(sigma)')
lines(x, I_sigma(x,0.1), type='l', col ='red')
lines(x, I_sigma(x,0.5), type='l', col ='blue')
lines(x, I_sigma(x,1), type='l', col ='green')
legend(-2, 6, legend=c(0.1, 0.5, 1),
col=c("red", "blue", "green"), lty=1:1, cex=0.8)
for(sigma in sigmas){
print(integrate(I_sigma, -Inf,Inf, sigma))
}
sigma=1
integrate(I_sigma,-Inf,-1,sigma, subdivisions=2000)$value+
integrate(I_sigma,-1,1,sigma)$value+
integrate(I_sigma,1,3,sigma)$value+
integrate(I_sigma, 3,6,sigma)$value+
integrate(I_sigma, 6,Inf,sigma, subdivisions=2000)$value
x <- seq(4.8,5.1,0.01)
plot(x, I_sigma(x,0.01), type='l', ylab='I(sigma)')
integrate(I_sigma, -Inf, 4.8, sigma=0.01 ,subdivisions=2000)$value+
integrate(I_sigma, 4.8, 5.1, sigma=0.01)$value+
integrate(I_sigma, 5.1, Inf, sigma=0.01, subdivisions=2000)$value
f_i <- function(x, sigma=1){
1/2*(1/(pi*(1+x^2)) + 1/(sigma*sqrt(2*pi)) * exp(-(x-5)^2/(2*sigma^2)))
}
g_i <- function(x) dnorm(x,0,4)
phi <- function(x) x
y <- rnorm(1e4,0,4)
my_ISamp <- function(phi,f,g,y){
IS <- mean(phi(y)*f(y)/g(y))
IS_sd <- sd(phi(y)*f(y)/g(y))/sqrt(length(y))
res <- c(IS, IS_sd)
res
}
my_ISamp(phi,f_i,g_i,y)
mean(f_i(y))
X <- rcauchy(n) + rnorm(n,0,5)
mean(f_i(X))
n <- 1e4
X <- rcauchy(n) + rnorm(n,0,5)
mean(f_i(X))
mean(X)
plot(density(rcauchy(n)))
plot(ecdf(rcauchy(n)))
x <- seq(-20,20,0.01)
plot(x,dcauchy(x))
plot(x,dcauchy(x), type ='l')
lines(x, dnorm(x,0,5), col='red')
lines(x, dcauchy(x) + dnorm(x,0,5), col='green')
plot(x,dcauchy(x), type ='l', ylim=c(0,1))
lines(x, dnorm(x,0,5), col='red')
lines(x, dcauchy(x) + dnorm(x,0,5), col='green')
plot(x,dcauchy(x), type ='l', ylim=c(0,0.5))
lines(x, dnorm(x,0,5), col='red')
lines(x, dcauchy(x) + dnorm(x,0,5), col='green')
lines(x, dcauchy(x, -2,1) col='blue')
lines(x, dcauchy(x, -2,1), col='blue')
lines(x, dcauchy(x, -2,0), col='blue')
lines(x, dcauchy(x, 0,2), col='blue')
lines(x, dcauchy(x, 0,10), col='blue')
x <- seq(-20,20,0.01)
plot(x,dcauchy(x), type ='l', ylim=c(0,0.5))
lines(x, dnorm(x,0,5), col='red')
lines(x, dcauchy(x) + dnorm(x,0,5), col='green')
lines(x, dcauchy(x, 0,0.5), col='blue')
y <- rnorm(1e4,0,4)
set.seed(222)
y <- rnorm(1e4,0,4)
w <- f(y)/g(y)
f_i <- function(x, sigma=1){
1/2*(1/(pi*(1+x^2)) + 1/(sigma*sqrt(2*pi)) * exp(-(x-5)^2/(2*sigma^2)))
}
g_i <- function(x) dnorm(x,0,4)
phi <- function(x) x
y <- rnorm(1e4,0,4)
w <- f_i(y)/g_i(y)
w
mean(w)
w <- y*f_i(y)/g_i(y)
mean(w)
my_ISamp(phi,f_i,g_i,y)
set.seed(222)
N <- 10^4
it <- 15
est <- rep(0,it)
mw <- rep(0, it)
se <- rep(0,it)
c=1
for (n in rep(N,it)){
x <- rcauchy(n,0,0.5)
y <- rcauchy(n0,0.5)
w <- mapply(f, x, y)/(dcauchy(x0,0.5)*dcauchy(y0,0.5))
cat(mean((x-y)^2*w), sd((x-y)^2*w)/sqrt(n), max(w),'\n')
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
set.seed(222)
N <- 10^4
it <- 15
est <- rep(0,it)
mw <- rep(0, it)
se <- rep(0,it)
c=1
for (n in rep(N,it)){
x <- rcauchy(n,0,0.5)
y <- rcauchy(n,0,0.5)
w <- mapply(f, x, y)/(dcauchy(x,0,0.5)*dcauchy(y,0,0.5))
cat(mean((x-y)^2*w), sd((x-y)^2*w)/sqrt(n), max(w),'\n')
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
f <- function(x,y){(1+(x-2*y)^2/4)^(-5/2) * (1+((x+2*y)^2)/3)^-2
}
I <- function(x) sapply(x,
function(t_i) integrate(function(y) f(t_i,y),-Inf,Inf)$value)
k = 1 / integrate(I, -Inf, Inf)$value
k
f <- function(x,y){k *(1+(x-2*y)^2/4)^(-5/2) * (1+((x+2*y)^2)/3)^-2
}
set.seed(222)
n <- 10^4
alpha <- 0.05
set.seed(222)
N <- 10^4
it <- 15
est <- rep(0,it)
mw <- rep(0, it)
se <- rep(0,it)
c=1
for (n in rep(N,it)){
x <- rcauchy(n,0,0.5)
y <- rcauchy(n,0,0.5)
w <- mapply(f, x, y)/(dcauchy(x,0,0.5)*dcauchy(y,0,0.5))
cat(mean((x-y)^2*w), sd((x-y)^2*w)/sqrt(n), max(w),'\n')
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
set.seed(222)
N <- 10^4
it <- 15
est <- rep(0,it)
mw <- rep(0, it)
se <- rep(0,it)
c=1
for (n in rep(N,it)){
x <- rcauchy(n,0,1.5)
y <- rcauchy(n,0,1.5)
w <- mapply(f, x, y)/(dcauchy(x,0,1.5)*dcauchy(y,0,1.5))
cat(mean((x-y)^2*w), sd((x-y)^2*w)/sqrt(n), max(w),'\n')
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
set.seed(222)
N <- 10^4
it <- 15
est <- rep(0,it)
mw <- rep(0, it)
se <- rep(0,it)
c=1
for (n in rep(N,it)){
x <- rcauchy(n,1,0.5)
y <- rcauchy(n,1,0.5)
w <- mapply(f, x, y)/(dcauchy(x,1,0.5)*dcauchy(y,1,0.5))
cat(mean((x-y)^2*w), sd((x-y)^2*w)/sqrt(n), max(w),'\n')
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
set.seed(222)
N <- 10^4
it <- 15
est <- rep(0,it)
mw <- rep(0, it)
se <- rep(0,it)
c=1
for (n in rep(N,it)){
x <- rcauchy(n,-1,0.5)
y <- rcauchy(n,-1,0.5)
w <- mapply(f, x, y)/(dcauchy(x,-1,0.5)*dcauchy(y,-1,0.5))
cat(mean((x-y)^2*w), sd((x-y)^2*w)/sqrt(n), max(w),'\n')
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
set.seed(222)
N <- 10^4
it <- 15
est <- rep(0,it)
mw <- rep(0, it)
se <- rep(0,it)
c=1
for (n in rep(N,it)){
x <- rcauchy(n)
y <- rcauchy(n)
w <- mapply(f, x, y)/(dcauchy(x)*dcauchy(y))
cat(mean((x-y)^2*w), sd((x-y)^2*w)/sqrt(n), max(w),'\n')
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
rm(list = ls())
set.seed(222)
f <- function(x) ifelse(x>= -3/2 & x<= 3/2,
(1+cos(x)^3)*exp(-0.5*x^2), 0)
x <- seq(-5,5,by=0.001)
plot(x,f(x), type = 'l')
lines(x, dnorm(x), col ='red')
int <- integrate(f,-3/2,3/2)
k <- 1/int$value
new_f <- function(x) ifelse(x>= -3/2 & x<= 3/2,
k*(1+cos(x)^3)*exp(-0.5*x^2), 0)
g <- function(x) dnorm(x)
x <- seq(-5,5,by=0.001)
plot(x,new_f(x), type = 'l')
lines(x, dnorm(x), col ='red')
C <- 2*sqrt(2)*k/pi
rf <- function(){
while(1){
x <- rnorm(1)
if (runif(1) < new_f(x)/(C*g(x))){
return(x)
}
}
}
x_samples <- replicate(1e3, rf())
x <- seq (-3/2 ,3/2 ,0.01)
#not sure how to obtain cdf
sapply(x, integrate(new_f(x),-3/2,3/2))
plot(ecdf(x_samples))
I <- function(x) sapply(x,
function(t_i) integrate(function(y) new_f(t_i,y),-Inf,Inf)$value)
integrate(I, -3/2, 3/2)$value
I <- function(x) sapply(x,
function(t_i) integrate(function(y) new_f(t_i),-Inf,Inf)$value)
integrate(I, -3/2, 3/2)$value
fx <- Vectorize(new_f)
dx <- 0.01
plot(x, cumsum(fx(x) * dx), type = "l")
lines(ecdf(x_samples), col ='red')
pdf('cdf.pdf', width=9, heigh=5)
plot(x, cumsum(fx(x) * dx), type = "l", ylab='F(x)')
lines(ecdf(x_samples), col ='red')
dev.off()
rm(list = ls())
set.seed(222)
library(cubature)
f <- function(x,y){(1+(x-2*y)^2/4)^(-5/2) * (1+((x+2*y)^2)/3)^-2
}
rm(list = ls())
set.seed(222)
f <- function(x,y){(1+(x-2*y)^2/4)^(-5/2) * (1+((x+2*y)^2)/3)^-2
}
I <- function(x) sapply(x,
function(t_i) integrate(function(y) f(t_i,y),-Inf,Inf)$value)
k = 1 / integrate(I, -Inf, Inf)$value
k
f <- function(x,y){k *(1+(x-2*y)^2/4)^(-5/2) * (1+((x+2*y)^2)/3)^-2
}
set.seed(222)
n <- 10^4
x <- rnorm(n)
y <- rnorm(n)
w <- mapply(f, x, y)/(dnorm(x)*dnorm(y))
is <- mean((x-y)^2*w)
is_sd <- sd((x-y)^2*w)/sqrt(n)
is
is_sd
set.seed(222)
N <- 10^4
it <- 15
est <- rep(0,it); mw <- rep(0, it); se <- rep(0,it)
c=1
for (n in rep(N,it)){
x <- rnorm(n)
y <- rnorm(n)
w <- mapply(f, x, y)/(dnorm(x)*dnorm(y))
cat(mean((x-y)^2*w), sd((x-y)^2*w)/sqrt(n), max(w),'\n')
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
df <- data.frame(Estimate = est, SE = se, Max_Weight = mw)
library(xtable)
print(xtable(df),include.rownames=FALSE) #Remove rownames
set.seed(124321)
N <- 10^6
x <- rnorm(N)
y <- rnorm(N)
w <- mapply(f, x, y)/(dnorm(x)*dnorm(y))
In <- cumsum((x-y)^2*w)/1:N
alln <- round(10^seq(1,6,length.out=1000))
# exact value for reference line
I2 <- function(x) sapply(x,
function(t_i) integrate(function(y) f(t_i,y),-Inf,Inf)$value)
Iexact <- integrate(I, -Inf, Inf)$value
Iexact
plot(alln, In[alln], xlab='n', ylab=expression(I[n]),
ylim=Iexact+c(-1,1), log='x')
lines(c(1,N), c(Iexact,Iexact))
##############################################################
set.seed(222)
N <- 10^4
it <- 15
est <- rep(0,it)
for (n in rep(N,it)){
x <- rcauchy(n)
y <- rcauchy(n)
w <- mapply(f, x, y)/(dcauchy(x)*dcauchy(y))
est[c] <- mean((x-y)^2*w)
mw[c] <- max(w)
se[c] <- sd((x-y)^2*w)/sqrt(n)
c = c +1
}
df <- data.frame(Estimate = est, SE = se, Max_Weight = mw)
library(xtable)
print(xtable(df),include.rownames=FALSE) #Remove rownames
################################################
set.seed(124321)
N <- 10^6
x <- rcauchy(N)
y <- rcauchy(N)
w <- mapply(f, x, y)/(dcauchy(x)*dcauchy(y))
In <- cumsum((x-y)^2*w)/1:N
alln <- round(10^seq(1,6,length.out=1000))
# exact value for reference line
I2 <- function(x) sapply(x,
function(t_i) integrate(function(y) f(t_i,y),-Inf,Inf)$value)
Iexact <- integrate(I, -Inf, Inf)$value
Iexact
plot(alln, In[alln], xlab='n', ylab=expression(I[n]),
ylim=Iexact+c(-1,1), log='x')
lines(c(1,N), c(Iexact,Iexact))
